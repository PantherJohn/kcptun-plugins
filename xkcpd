#!/bin/bash
# 
# Aghostd Universal
# ElitetNode Server Fastlane Service
# - eLitex Server Integration
# (c) Elitet Inc. 2018-2019
# Jared Hillier, Lindsay J. Gibson
# 
# Plugin Settings
# - Copyrights
branding="QuarProxy Service Extension"
copyright="(c) eLitet Inc. 2018-2019"
forking="forked from w1ndy/kcptun-plugins"
# - ANSI Functions
esc() { echo -e '\033'$@'\033'; }
ansi() { echo -e "\e[${1}m${@:2}\e[0m"; }
b() { ansi 1 "$@"; }
d()	{ ansi 2 "$@"; }
i() { ansi 3 "$@"; }
u() { ansi 4 "$@"; }
_() { echo -e "($(u $@))"; }
red() { ansi 31 "$@"; }
green() { ansi 32 "$@"; }
yellow() { ansi 33 "$@"; }
# - Banners
PLUGIN_BANNER="[eLxKCPd]"
KCP_BANNER="$PLUGIN_BANNER\ xKCPd\ "
RAW_BANNER="$PLUGIN_BANNER\ UDP2RAW\ "
# - Messenger
info() { green "INFO:" $@; }
warn() { yello "WARN:" $@; }
error() { red "EMERG:" $@; exit 1; }
indent() { sed 's/^/  /' ; }
# - Directories
KCP_BINARY="/bin/kcptun"
RAW_BINARY="/bin/udp2raw"
# - Utils
bool() { [ "$1" == true ] && echo $2 || echo $3 ; }
isIPv6Addr() { [[ $SS_REMOTE_HOST == *":"* ]] && [[ $SS_REMOTE_HOST != "["* ]] && true || false ; }
shufPortUnused() {
    read LOWERPORT UPPERPORT < /proc/sys/net/ipv4/ip_local_port_range
    while :; do shuffPortnum="`shuf -i $LOWERPORT-$UPPERPORT -n 1`"; netstat -tapln | grep $shuffPortnum || break; done
    echo $shuffPortnum
}
read_opts() {
    IFS=';' read -ra OPTS <<< "$SS_PLUGIN_OPTIONS"
    for i in "${OPTS[@]}"; do eval $i; done
}
cleanup() { pkill -P $$ ; }
spawn() {
    trap cleanup EXIT
    $KCP_BINARY $KCP_PARAMS 2>&1 | sed "s/^/$KCP_BANNER/" &
    local kcp=$!
    if [ ! "$raw" == true ]; then
        wait $kcp;
    else
        trap 'exit 0' CHLD
        $RAW_BINARY $RAW_PARAMS 2>&1 | sed "s/^/$RAW_BANNER/" &
        local raw=$!; set -m; wait; set +m;
    fi
    cleanup
}
usage() {
    echo
    echo -e "$branding"
    echo -e "$copyright"
    echo -e "- xKCPd plugin integration"
    echo -e "  $forking"
    echo -e "Syntax: ss-{local|tunnel|server} ... --plugin $0 
        --plugin-opts \"{type|config|key|crypt|mode|mtu|sndwnd|rcvwnd
        |datashard|parityshard|dscp|nocomp|quiet|params|raw}:<value>\""
    echo
}
# < --------------------------------- >


client_defaults() {
    raw_defaults() {
        [ ! "$raw" == true ] && return 0 || info "UDP2RAW enabled"

        if [ ! -z $raw_config ]; then
            info "Using UDP2RAW config $raw_config."
            RAW_PARAMS="--conf-file $config"
            return 0
        fi

        RAW_HOST="127.0.0.1"
        RAW_PORT=$(shufPortUnused)

        RAW_PARAMS_LISTEN="-l $RAW_HOST:$RAW_PORT"
        RAW_PARAMS_REMOTE=$(bool $(isIPv6Addr) "-r [$SS_REMOTE_HOST]:$SS_REMOTE_PORT" "-r $SS_REMOTE_HOST:$SS_REMOTE_PORT")

        RAW_PARAMS_MODE="--raw-mode ${raw_mode:-faketcp}"
        RAW_PARAMS_KEY="--key ${key:-DEFAULT_INSECURE_KEY_RAW}"
        RAW_PARAMS_CIPHER="--cipher-mode ${raw_cipher:-aes128cbc}"
        RAW_PARAMS_AUTH="--auth-mode ${raw_auth:-md5}"

        RAW_PARAMS="-c -a $RAW_PARAMS_LISTEN $RAW_PARAMS_REMOTE $RAW_PARAMS_MODE $RAW_PARAMS_KEY $RAW_PARAMS_CIPHER $RAW_PARAMS_AUTH $raw_params"
    }

    kcp_defaults() {
        if [ ! -z $config ]; then
            info "Use KCPTUN config $config."
            KCP_PARAMS="-c $config"
            #return 0
        fi

        REMOTE_HOST="$SS_REMOTE_HOST"
        REMOTE_PORT="$SS_REMOTE_PORT"
        if [ "$raw" == true ]; then
            REMOTE_HOST="$RAW_HOST"
            REMOTE_PORT="$RAW_PORT"
        fi

        KCP_PARAMS_LISTEN="--localaddr $SS_LOCAL_HOST:$SS_LOCAL_PORT"
        KCP_PARAMS_TARGET="--remoteaddr $REMOTE_HOST:$REMOTE_PORT"

        [ -z $key ] && warn "Key unspecified, using DEFAULT_INSECURE_KEY!"

        KCP_PARAMS_KEY="--key ${key:-DEFAULT_INSECURE_KEY}"
        KCP_PARAMS_CRYPT="--crypt ${crypt:-aes}"
        KCP_PARAMS_MODE="--mode ${mode:-fast}"

        KCP_PARAMS_MTU=$(bool "$raw" "--mtu ${mtu:-1200}" "--mtu ${mtu:-1350}")

        KCP_PARAMS_SNDWND="--sndwnd ${sndwnd:-1024}"
        KCP_PARAMS_RCVWND="--rcvwnd ${rcvwnd:-1024}"
        KCP_PARAMS_DATASHARD="--datashard ${datashard:-10}"
        KCP_PARAMS_PARITYSHARD="--parityshard ${parityshard:-3}"
        KCP_PARAMS_DSCP="--dscp ${dscp:-0}"
        KCP_PARAMS_NOCOMP=$(bool $nocomp "--nocomp ")
        KCP_PARAMS_QUIET=$(bool $quiet "--quiet ")

        KCP_PARAMS="$KCP_PARAMS_LISTEN $KCP_PARAMS_TARGET $KCP_PARAMS_KEY $KCP_PARAMS_CRYPT $KCP_PARAMS_MODE $KCP_PARAMS_MTU $KCP_PARAMS_SNDWND $KCP_PARAMS_RCVWND $KCP_PARAMS_DATASHARD $KCP_PARAMS_PARITYSHARD $KCP_PARAMS_DSCP $KCP_PARAMS_NOCOMP $KCP_PARAMS_QUIET $params"
    }

    kcp_defaults
    raw_defaults
}
server_defaults() {
    kcp_defaults() {
        if [ ! -z $config ]; then
            info "Use KCPTun config $config."
            KCP_PARAMS="-c $config"
            return 0
        fi

        KCP_HOST="$SS_REMOTE_HOST"
        KCP_PORT="$SS_REMOTE_PORT"
        if [ "$raw" == true ]; then
            KCP_HOST="127.0.0.1"
            KCP_PORT=$(shufPortUnused)
        fi

        KCP_PARAMS_LISTEN="--listen $KCP_HOST:$KCP_PORT"
        KCP_PARAMS_TARGET="--target $SS_LOCAL_HOST:$SS_LOCAL_PORT"

        [ -z $key ] && warn "Key unspecified, using DEFAULT_INSECURE_KEY!"

        KCP_PARAMS_KEY="--key ${key:-DEFAULT_INSECURE_KEY}"
        KCP_PARAMS_CRYPT="--crypt ${crypt:-aes}"
        KCP_PARAMS_MODE="--mode ${mode:-fast}"

        KCP_PARAMS_MTU=$(bool "$raw" "--mtu ${mtu:-1200}" "--mtu ${mtu:-1350}")

        KCP_PARAMS_SNDWND="--sndwnd ${sndwnd:-1024}"
        KCP_PARAMS_RCVWND="--rcvwnd ${rcvwnd:-1024}"
        KCP_PARAMS_DATASHARD="--datashard ${datashard:-10}"
        KCP_PARAMS_PARITYSHARD="--parityshard ${parityshard:-3}"
        KCP_PARAMS_DSCP="--dscp ${dscp:-0}"
        KCP_PARAMS_NOCOMP=$(bool $nocomp "--nocomp ")
        KCP_PARAMS_QUIET=$(bool $quiet "--quiet ")

        KCP_PARAMS="$KCP_PARAMS_LISTEN $KCP_PARAMS_TARGET $KCP_PARAMS_KEY $KCP_PARAMS_CRYPT $KCP_PARAMS_MODE $KCP_PARAMS_MTU $KCP_PARAMS_SNDWND $KCP_PARAMS_RCVWND $KCP_PARAMS_DATASHARD $KCP_PARAMS_PARITYSHARD $KCP_PARAMS_DSCP $KCP_PARAMS_NOCOMP $KCP_PARAMS_QUIET $params"
    }

    raw_defaults() {
        [ ! "$raw" == true ] && return 0 || info "UDP2RAW enabled"

        if [ ! -z $raw_config ]; then
            info "Using UDP2RAW config $raw_config."
            RAW_PARAMS="--conf-file $config"
            return 0
        fi
        
        RAW_PARAMS_REMOTE=$(bool $(isIPv6Addr) "-r [$SS_REMOTE_HOST]:$SS_REMOTE_PORT" "-r $SS_REMOTE_HOST:$SS_REMOTE_PORT")

        RAW_PARAMS_REMOTE="-r $KCP_HOST:$KCP_PORT"
        RAW_PARAMS_MODE="--raw-mode ${raw_mode:-faketcp}"
        RAW_PARAMS_KEY="--key ${key:-DEFAULT_INSECURE_KEY_RAW}"
        RAW_PARAMS_CIPHER="--cipher-mode ${raw_cipher:-aes128cbc}"
        RAW_PARAMS_AUTH="--auth-mode ${raw_auth:-md5}"

        RAW_PARAMS="-s -a $RAW_PARAMS_LISTEN $RAW_PARAMS_REMOTE $RAW_PARAMS_MODE $RAW_PARAMS_KEY $RAW_PARAMS_CIPHER $RAW_PARAMS_AUTH $raw_params"
    }

    kcp_defaults
    raw_defaults
}


main() {
    [ -z $SS_LOCAL_PORT ] && ( usage | indent; exit 1; )
    read_opts
    case "$type" in
        client) client_defaults;;
        server) server_defaults;;
            *)  usage | indent;;
    esac
    spawn
}

main $@
